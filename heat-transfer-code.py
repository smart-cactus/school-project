import matplotlib.pyplot as plt
import numpy as np

def printMaterials():
    for material in materials:
        print(material)
def addMaterial():
    while True:
        name0 = input("введите название нового материала")
        materials.append(name0)
        materials_properties_SI[name0] = {"плотность (кг/м³)": input("введите значение плотности в (кг/м³)"), "теплопроводность (Вт/(м·К))": input("введите значение теплопроводности в (Вт/(м·К))")}
        print("Хотите добавить ещё новый материал?")
        if not int(input("Напишите '0' если нет, или '1' если да")):
            break

materials_properties_SI = {
    
    "Иридий": {
        "плотность (кг/м³)": 22560,
        "теплопроводность (Вт/(м·К))": 147,
        "удельная теплоёмкость (Дж/(кг·К))": 0.132
    },
    "Платина": {
        "плотность (кг/м³)": 21450,
        "теплопроводность (Вт/(м·К))": 71,
        "удельная теплоёмкость (Дж/(кг·К))": 0.129
    },
    "Золото": {
        "плотность (кг/м³)": 19320,
        "теплопроводность (Вт/(м·К))": 315,
        "удельная теплоёмкость (Дж/(кг·К))": 0.129
    },
    "Вольфрам": {
        "плотность (кг/м³)": 19250,
        "теплопроводность (Вт/(м·К))": 173,
        "удельная теплоёмкость (Дж/(кг·К))": 0.134
    },
    "Серебро": {
        "плотность (кг/м³)": 10490,
        "теплопроводность (Вт/(м·К))": 429,
        "удельная теплоёмкость (Дж/(кг·К))": 0.235
    },
    "Медь": {
        "плотность (кг/м³)": 8960,
        "теплопроводность (Вт/(м·К))": 401,
        "удельная теплоёмкость (Дж/(кг·К))": 0.385
    },
    "Никель": {
        "плотность (кг/м³)": 8900,
        "теплопроводность (Вт/(м·К))": 90.7,
        "удельная теплоёмкость (Дж/(кг·К))": 0.444
    },
    "Латунь": {
        "плотность (кг/м³)": 8400,
        "теплопроводность (Вт/(м·К))": 120,
        "удельная теплоёмкость (Дж/(кг·К))": 0.385
    },
    "Сталь": {
        "плотность (кг/м³)": 7850,
        "теплопроводность (Вт/(м·К))": 50,
        "удельная теплоёмкость (Дж/(кг·К))": 0.490
    },
    "Железо": {
        "плотность (кг/м³)": 7870,
        "теплопроводность (Вт/(м·К))": 80,
        "удельная теплоёмкость (Дж/(кг·К))": 0.450
    },
    "Олово": {
        "плотность (кг/м³)": 7310,
        "теплопроводность (Вт/(м·К))": 66,
        "удельная теплоёмкость (Дж/(кг·К))": 0.210
    },
    "Цинк": {
        "плотность (кг/м³)": 7140,
        "теплопроводность (Вт/(м·К))": 116,
        "удельная теплоёмкость (Дж/(кг·К))": 0.387
    },
    "Чугун": {
        "плотность (кг/м³)": 6800,
        "теплопроводность (Вт/(м·К))": 50,
        "удельная теплоёмкость (Дж/(кг·К))": 0.460
    },
    "Алмаз": {
        "плотность (кг/м³)": 3510,
        "теплопроводность (Вт/(м·К))": 2000,
        "удельная теплоёмкость (Дж/(кг·К))": 0.500
    },
    "Алюминий": {
        "плотность (кг/м³)": 2700,
        "теплопроводность (Вт/(м·К))": 235,
        "удельная теплоёмкость (Дж/(кг·К))": 0.897
    },
    "Мрамор": {
        "плотность (кг/м³)": 2650,
        "теплопроводность (Вт/(м·К))": 2.5,
        "удельная теплоёмкость (Дж/(кг·К))": 0.880
    },
    "Гранит": {
        "плотность (кг/м³)": 2750,
        "теплопроводность (Вт/(м·К))": 3.5,
        "удельная теплоёмкость (Дж/(кг·К))": 0.790
    },
    "Стекло": {
        "плотность (кг/м³)": 2500,
        "теплопроводность (Вт/(м·К))": 1.0,
        "удельная теплоёмкость (Дж/(кг·К))": 0.840
    },
    "Бетон": {
        "плотность (кг/м³)": 2400,
        "теплопроводность (Вт/(м·К))": 1.7,
        "удельная теплоёмкость (Дж/(кг·К))": 0.840
    },
    "Фарфор": {
        "плотность (кг/м³)": 2400,
        "теплопроводность (Вт/(м·К))": 1.2,
        "удельная теплоёмкость (Дж/(кг·К))": 1.000
    },
    "Графит": {
        "плотность (кг/м³)": 2200,
        "теплопроводность (Вт/(м·К))": 150,
        "удельная теплоёмкость (Дж/(кг·К))": 1.600
    },
    "Лёд": {
        "плотность (кг/м³)": 920,
        "теплопроводность (Вт/(м·К))": 2.2,
        "удельная теплоёмкость (Дж/(кг·К))": 2.090
    },
    "Парафин": {
        "плотность (кг/м³)": 800,
        "теплопроводность (Вт/(м·К))": 0.2,
        "удельная теплоёмкость (Дж/(кг·К))": 2.100
    },
    "Дуб (сухой)": {
        "плотность (кг/м³)": 750,
        "теплопроводность (Вт/(м·К))": 0.1,
        "удельная теплоёмкость (Дж/(кг·К))": 2.300
    },
    "Берёза (сухая)": {
        "плотность (кг/м³)": 650,
        "теплопроводность (Вт/(м·К))": 0.1,
        "удельная теплоёмкость (Дж/(кг·К))": 2.500
    },
    "Пробка": {
        "плотность (кг/м³)": 240,
        "теплопроводность (Вт/(м·К))": 0.04,
        "удельная теплоёмкость (Дж/(кг·К))": 1.200
    },
    "Платиноиридиевый сплав": {
        "плотность (кг/м³)": 21450,
        "теплопроводность (Вт/(м·К))": 70,
        "удельная теплоёмкость (Дж/(кг·К))": 0
    },
    "Свинец": {
        "плотность (кг/м³)": 11340,
        "теплопроводность (Вт/(м·К))": 35,
        "удельная теплоёмкость (Дж/(кг·К))": 0
    },
    "Ртуть": {
        "плотность (кг/м³)": 13560,
        "теплопроводность (Вт/(м·К))": 8.3,
        "удельная теплоёмкость (Дж/(кг·К))": 0
    },
    "Мёд": {
        "плотность (кг/м³)": 1420,
        "теплопроводность (Вт/(м·К))": 0.5,
        "удельная теплоёмкость (Дж/(кг·К))": 0
    },
    "Глицерин": {
        "плотность (кг/м³)": 1260,
        "теплопроводность (Вт/(м·К))": 0.2,
        "удельная теплоёмкость (Дж/(кг·К))": 0
    },
    "Вода": {
        "плотность (кг/м³)": 1000,
        "теплопроводность (Вт/(м·К))": 0.569,
        "удельная теплоёмкость (Дж/(кг·К))": 4200
    },
}

materials = [
    "Иридий",  
    "Платина",  
    "Золото",  
    "Вольфрам",  
    "Серебро",  
    "Медь",  
    "Никель",  
    "Латунь",  
    "Сталь",  
    "Железо",  
    "Олово",  
    "Цинк",  
    "Чугун",  
    "Алмаз",  
    "Алюминий",  
    "Мрамор",  
    "Гранит",  
    "Стекло",  
    "Бетон",  
    "Фарфор",  
    "Графит",  
    "Лёд",  
    "Парафин",  
    "Дуб (сухой)",  
    "Берёза (сухая)",  
    "Пробка",  
    "Платиноиридиевый сплав",  
    "Свинец",  
    "Ртуть", 
    "Мёд",  
    "Глицерин",
    "Вода"
]

class HeatTransfer:
    def __init__(self, area):
        self.area = area  # Площадь (м²)

    def conduction(self, k, delta_T, d):
        Q = k * self.area * (delta_T / d)
        return Q


def main():
    print("Список доступных материалов")
    printMaterials()

    # # Добавление материала
    # print("Хотите добавить новый материал?")
    # answer = int(input("Напишите '0' если нет, или '1' если да\n"))
    # if answer:
    #     addMaterial()
    #     printMaterials()
    # Выбор материала   
    material1 = input("введите название материала из списка\n")

    if material1 not in materials:
        print("Ошибка: материал отсутствует в списке. Пожалуйста, введите один из следующих материалов:")
        print("".join(material1))
    else:
        print(f"Вы выбрали материал: {material1}")

    # Ввод данных
    area = int(input("Введите площадь (м²): "))
    d = int(input("Введите толщину материала (м): "))
    heat_transfer = HeatTransfer(area)

    # Теплопередача по проводимости
    k = materials_properties_SI[material1]["теплопроводность (Вт/(м·К))"]
    T1 = int(input("Введите температуру данной среды или предмета для проводимости (К): \n"))
    T2 = int(input("Введите температуру среды или предмета с которой взаимодействует данная среда(К): \n"))

    delta_T = abs(T1 - T2)
    Q_conduction = heat_transfer.conduction(k, delta_T, d)
    print(f"Теплопередача по проводимости: {Q_conduction} Вт")

    # Кол-во времени требуемое для нагревания тела с T1 по T2
    m = area * d * materials_properties_SI[material1]["плотность (кг/м³)"] 
    Q =  m * delta_T * materials_properties_SI[material1]["удельная теплоёмкость (Дж/(кг·К))"]
    t = Q / Q_conduction

    # Визуализация результатов №1
    plt.figure(figsize=(12, 6))
    T = np.linspace(0, 100, 100)
    plt.plot(T, np.linspace(0, Q_conduction, 100), label='Теплопередача по проводимости', color='red')
    

    plt.title('Теплопередача')
    plt.xlabel('Разница температур (К)')
    plt.ylabel('Тепловой поток (Вт)')
    plt.legend()
    plt.grid()
    plt.xlim(0, 100)
    plt.show() 

    # Визуализация результатов №2
    plt.figure(figsize=(12, 6))
    dT = np.linspace(T1, T2, 100)
    plt.plot(np.linspace(0, t, 100), dT, label='???', color='red')
    

    plt.title('Теплопередача')
    plt.ylabel('Tемпература тела (К)')
    plt.xlabel('Время (c)')
    plt.legend()
    plt.grid()
    plt.show()

if __name__ == "__main__":
    main()